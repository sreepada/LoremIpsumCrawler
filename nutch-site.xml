<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!-- Put site-specific property overrides in this file. -->

<configuration>
    <property>
        <name>http.agent.name</name>
        <value>LoremIpsumBot</value>
    </property>
    <property>
        <name>fetcher.parse</name>
        <value>false</value>
        <description>If true, fetcher will parse content. Default is false, which means
            that a separate parsing step is required after fetching is finished.</description>
    </property>
    <property>
        <name>plugin.includes</name>
        <value>protocol-http|urlfilter-(regex|nearduplicate)|parse-(html|tika)|index-(basic|anchor)|scoring-opic|urlnormalizer-(pass|regex|basic)|urlmeta</value>
        <description>Regular expression naming plugin directory names to
            include.  Any plugin not matching this expression is excluded.
            In any case you need at least include the nutch-extensionpoints plugin. By
            default Nutch includes crawling just HTML and plain text via HTTP,
            and basic indexing and search plugins.
        </description>
    </property>
    <property>
      <name>http.agent.email</name>
      <value>(madanpat) at (usc) dot (edu)</value>
      <description>An email address to advertise in the HTTP 'From' request
       header and User-Agent header. A good practice is to mangle this
       address (e.g. 'info at example dot com') to avoid spamming.
      </description>
    </property>
    <property>
        <name>parser.timeout</name>
        <value>-1</value>
        <description>Timeout in seconds for the parsing of a document, otherwise treats it as an exception and
        moves on the the following documents. This parameter is applied to any Parser implementation.
        Set to -1 to deactivate, bearing in mind that this could cause
        the parsing to crash because of a very long or corrupted document.
        </description>
    </property>
    
    <property>
        <name>index.parse.md</name>
        <value>metatag.description,metatag.keywords,producer</value>
        <description>
        Comma-separated list of keys to be taken from the parse metadata to generate fields.
        Can be used e.g. for 'description' or 'keywords' provided that these values are generated
        by a parser (see parse-metatags plugin)
        </description>
    </property>
    
    <property>
        <name>metatags.names</name>
        <value>description,keywords</value>
        <description> Names of the metatags to extract, separated by ','.
        Use '*' to extract all metatags. Prefixes the names with 'metatag.'
        in the parse-metadata. For instance to index description and keywords,
        you need to activate the plugin index-metadata and set the value of the
        parameter 'index.parse.md' to 'metatag.description,metatag.keywords'.
        </description>
    </property>
    
    <property>
        <name>file.content.limit</name>
        <value>-1</value>
        <description>The length limit for downloaded content, in bytes.
        If this value is nonnegative (>=0), content longer than it will be truncated;
        otherwise, no truncation at all.
        </description>
    </property>
    <property>
    
    <name>http.timeout</name>
        <value>30000</value>
        <description>The default network timeout, in milliseconds.</description>
    </property>
</configuration>
